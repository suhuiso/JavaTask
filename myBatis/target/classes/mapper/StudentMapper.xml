<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.StudentMapper">
    <resultMap id="studentMap" type="Student">
        <id property="id" column="id" javaType="java.lang.Integer"></id>
        <result property="name" column="name" javaType="java.lang.String"></result>
        <result property="type" column="type" javaType="java.lang.String"></result>
        <result property="num" column="c_num" javaType="java.lang.Integer"></result>
        <result property="updateAt" column="update_at" javaType="java.lang.Long"></result>
        <result property="createAt" column="create_at" javaType="java.lang.Long"></result>
        <result property="declaration" column="declaration" javaType="java.lang.String"></result>
    </resultMap>

    <!-- 在各种标签中的id属性必须和接口中的方法名相同，id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，
    resultType属性指明查询返回的结果集类型-->
    <!-- useGeneratedKeys：（仅对 insert 有用）这会告诉 MyBatis 使用 JDBC 的 getGeneratedKeys
    方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
    <!--keyProperty： （仅对 insert 有用）标记一个属性， MyBatis 会通过 getGeneratedKeys 或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
    <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->


    <insert id="addStudent" useGeneratedKeys="true" keyProperty="id">
        insert into student (name, type, c_num, update_at, create_at, declaration) values (#{name}, #{type}, #{num}, #{updateAt}, #{createAt}, #{declaration})
    </insert>

    <update id="updateStudent" >
        update student set name =#{name}, type=#{type}, c_num=#{num}, update_at=#{updateAt}, create_at=#{createAt}, declaration=#{declaration} where id=#{id}
    </update>

    <delete id="deleteStudent" parameterType="int">
        delete from student where id=#{id}
    </delete>

    <select id="getStudentById" parameterType="int" resultMap="studentMap">
        select * from student where id=#{id}
    </select>

    <select id="getAllStudent" resultMap="studentMap">
        select * from student
    </select>

</mapper>